{"version":3,"sources":["constants/config.js","components/PokeHeader/PokeHeader.jsx","services/PokeAPI.service.js","components/PokeSpinner/PokeBallSpinner.jsx","components/PokeCard/PokeCard.jsx","components/ScrollView/PokeSearchViewport.jsx","pages/Home.jsx","constants/types.data.js","components/PokeDetails/PokemonDetail.jsx","i18n/abilities.js","components/ScrollView/ScrollView.jsx","pages/PokemonDetailPage.jsx","pages/PokemonSearchPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["config","PokeHeader","useState","keyword","setKeyword","history","useHistory","className","onClick","push","src","type","value","onChange","ev","localStorage","setItem","target","search","getItem","endpoint","getFirstPokemons","_","a","fetch","pokemons","json","getPokemonDetails","pokemonName","pokemonDetails","getAllPokemons","getFilteredPokemonsByName","name","pokemonArray","JSON","parse","filtered","filter","poke","includes","forEach","then","pkm","data","PokeBallSpinner","size","sizes","small","width","height","medium","style","alt","PokeCard","PokeSearchViewport","setPokemons","useEffect","results","fallback","map","singlePokemon","HomePage","undefined","stringify","types","fire","bg","font","trad","water","grass","ground","rock","normal","psychic","poison","ghost","dragon","electric","steel","fairy","fighting","bug","ice","dark","flying","PokemonData","pokeData","thisTypeColors","decorationColor","background","fontColor","color","sprites","front_default","pokename","PokemonDetail","pokeInfo","setPokeInfo","isLoading","setLoading","details","ScrollView","children","PokeDetailPage","useParams","PokemonSearchList","list","PokemonSearchPage","pokeSearchList","setPokeSearchList","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78073c9c.chunk.js","sourcesContent":["export const config = {\r\n    appUrl: 'http://localhost:3000',\r\n};","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { config } from '../../constants/config';\r\n/*import { getFilteredPokemonsByName } from '../../services/PokeAPI.service';*/\r\nimport './pokeHeader.css';\r\n\r\nexport default function PokeHeader() {\r\n\r\n    const [ keyword, setKeyword ] = useState('');\r\n    const history = useHistory();\r\n\r\n    const getRandomNumber = (max, min) => Math.floor(Math.random() * (max - min) + min);\r\n\r\n    const handleChangeKeyword = (ev) => {        \r\n        localStorage.setItem( 'lastSearch', ev.target.value );\r\n        setKeyword(ev.target.value);\r\n    }\r\n\r\n    const handleSearchPokemon = () => {\r\n        const search = keyword === '' ? localStorage.getItem('lastSearch') || 'def' : keyword;\r\n        history.push(`/pokemon/search/${ search }`);\r\n    }\r\n\r\n    const handleSendHome = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex between poke-header\">\r\n                <div className=\"vertical-center header-home-link flex between\" onClick={ handleSendHome }>\r\n                    <img className=\"poke-logo\" src={ `${config.appUrl}/pokeball.png` }></img>\r\n                    <span>PokeInfo App</span>\r\n                </div>\r\n                <div className=\"vertical-center\">\r\n                    <input className=\"text-search\" type=\"text\" value={ keyword } onChange={ handleChangeKeyword }/>\r\n                    <button className=\"btn btn-search\" type=\"button\" onClick={ handleSearchPokemon }>Buscar</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","const endpoint = 'https://pokeapi.co/api/v2';\r\n\r\nexport const getFirstPokemons = async _ => {\r\n    const pokemonOrder = 'pokemon?limit=50&offset=0';\r\n    const pokemons = await fetch(`${endpoint}/${pokemonOrder}`);\r\n    return pokemons.json();\r\n}\r\n\r\nexport const getEvolutionChain = async id => {\r\n    const evolutionChainEndpoint = `evolution-chain/${id}`;\r\n    const pokeEvolutionChain = await fetch(`${endpoint}/${evolutionChainEndpoint}`); \r\n    return pokeEvolutionChain.json();\r\n}\r\n\r\nexport const getPokemonDetails = async pokemonName => {\r\n    const pokemonDetails = await fetch(`${endpoint}/pokemon/${pokemonName}`);\r\n    return pokemonDetails.json();\r\n};\r\n\r\nexport const getAllPokemons = async () => {\r\n    const pokemons = await fetch(`${endpoint}/pokemon?limit=1118`);\r\n    return pokemons.json();\r\n}\r\n\r\nexport const getFilteredPokemonsByName = async name => {\r\n    const pokemonArray = JSON.parse(localStorage.getItem('pokeArray'));\r\n    const filtered = pokemonArray.filter(poke => poke.name.includes(name));\r\n    \r\n    await filtered.forEach(poke => {\r\n        fetch(`${endpoint}/pokemon/${poke.name}`).then(poke => poke.json())\r\n            .then(pkm => poke.data = pkm.data);\r\n    });\r\n\r\n    return filtered;\r\n}","import React from 'react';\r\nimport { config } from '../../constants/config';\r\nimport './spinner.css';\r\n\r\nexport default function PokeBallSpinner({ size }) {\r\n\r\n    const small = {\r\n        width: 70,\r\n        height: 70,\r\n    };\r\n\r\n    const medium = {\r\n        width: 100,\r\n        height: 100,\r\n    }\r\n\r\n    const sizes = { small, medium };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex between spinner\">\r\n                <img className=\"rotation\" style={ sizes[ size || 'medium' ] } src={ `${config.appUrl}/pokeball.png` } alt=\"pokeball logo\" />\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport './pokeCard.css';\r\n\r\nexport default function PokeCard({ name, onClick }) {\r\n    return(\r\n        <div className=\"flex center\">\r\n            <div className=\"poke-card\" onClick={ onClick }>\r\n                <span className=\"name\">{ name }</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React,{ useState, useEffect, Suspense } from 'react';\r\nimport { getFirstPokemons } from '../../services/PokeAPI.service';\r\nimport PokeBallSpinner from '../PokeSpinner/PokeBallSpinner';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PokeCard from '../PokeCard/PokeCard';\r\nimport './searchViewport.css';\r\n\r\nexport default function PokeSearchViewport(){\r\n\r\n    const [ pokemons, setPokemons ] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(_ => {\r\n        getFirstPokemons().then(pokemons => {\r\n            setPokemons(pokemons.results)\r\n        });        \r\n    },[]);\r\n\r\n    const handleShowPokeDetail = (pokemonName) => {\r\n        history.push(`/pokemon/${ pokemonName }`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={ <PokeBallSpinner/> }>\r\n                <div className=\"pokeViewport\">\r\n                    {\r\n                        pokemons.map(singlePokemon => <PokeCard \r\n                            key={ singlePokemon.name }\r\n                            name={ singlePokemon.name }\r\n                            onClick={ _ => handleShowPokeDetail(singlePokemon.name) }\r\n                            />\r\n                        )\r\n                    }\r\n                </div>\r\n            </Suspense>\r\n        </>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { getAllPokemons } from '../services/PokeAPI.service';\r\nimport PokeSearchViewport from '../components/ScrollView/PokeSearchViewport';\r\n\r\nexport default function HomePage(){\r\n\r\n    if(!localStorage.getItem('pokeArray') || localStorage.getItem('pokeArray') === undefined){\r\n        useEffect(() => {\r\n          getAllPokemons().then(pokemons => {\r\n            localStorage.setItem('pokeArray', JSON.stringify(pokemons.results));\r\n    \r\n          });\r\n        },[]);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <PokeSearchViewport/>        \r\n        </>\r\n    );\r\n}","export const types = {\r\n    fire: { bg: '#ffac38', font: '#000', trad: 'Fuego' },\r\n    water: { bg: '#4cbefc', font: '#fff', trad: 'Agua' },\r\n    grass: { bg: '#24a65a', font: '#fff', font: '#fff', trad: 'Planta' },\r\n    ground: { bg: '#a37a53', font: '#fff', trad: 'Tierra' },\r\n    rock: { bg: '#918477', font: '#fff', trad: 'Roca' },\r\n    normal: { bg: '#c2b497', font: '#fff', trad: 'Normal' },\r\n    psychic: { bg: 'radial-gradient( #ff1f1f, #311fff )', font: '#fff', trad: 'Psìquico' },\r\n    poison: { bg: 'linear-gradient(90deg,#525cba,50px,#b852ba)', font: '#fff', trad: 'Veneno' },\r\n    ghost: { bg: '#656b99', font: '#fff', trad: 'Fantasma' },\r\n    dragon: { bg: '#a5ade8', font: '#fff', trad: 'Dragon' },\r\n    electric: { bg: '#fff538', font: '#000', trad: 'Eléctrico' },\r\n    steel: { bg: '#c4c4c4', font: '#000', trad: 'Acero' },\r\n    fairy: { bg: '#efc7f2', font: '#000', trad: 'Hada' },\r\n    fighting: { bg: '#850101', font: '#fff', trad: 'Lucha' },\r\n    bug: { bg: '#abf5d3', font: '#000', trad: 'Bicho' },\r\n    ice: { bg: '#95eaed', font: '#000', trad: 'Hielo' },\r\n    dark: { bg: 'linear-gradient(#141414,#787878)', font: '#fff', trad: 'Siniestro' },\r\n    flying: { bg: '#8bbbc9', font: '#fff', trad: 'Volador' },\r\n};\r\n\r\nexport const typesWeakness = {\r\n    fire: [],\r\n    water: [],\r\n    // ...\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { types } from '../../constants/types.data';\r\nimport { getPokemonDetails } from '../../services/PokeAPI.service';\r\nimport PokeBallSpinner from '../PokeSpinner/PokeBallSpinner';\r\nimport { useHistory } from 'react-router';\r\nimport abilitiesTranslation from '../../i18n/abilities';\r\nimport './pokeDetail.css';\r\n\r\nconst PokemonData = (pokeData) => {\r\n    const { data } = pokeData;\r\n    const thisTypeColors = types[data.types[0].type.name];\r\n    const history = useHistory();\r\n\r\n    const decorationColor = {\r\n        background: thisTypeColors.bg,\r\n    }\r\n\r\n    const fontColor = {\r\n        color: thisTypeColors.font\r\n    }\r\n\r\n    const getThisPokemonDetails = (pokename) => {\r\n        history.push(`/pokemon/${pokename}`);\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"poke-detail-card flex center\">\r\n            <div className=\"top-decoration\" style={ decorationColor }></div>\r\n            <div className=\"poke-details\">\r\n                <div className=\"flex center\">\r\n                    <h3 className=\"poke-name\" style={ fontColor }>{ data.name }</h3>\r\n                </div>\r\n                <div className=\"flex center\">\r\n                    <img className=\"poke-pic\" src={ data.sprites.front_default }></img>\r\n                </div>\r\n                <div className=\"flex center\">\r\n                    <span className=\"poke-name no-margin\">{ data.name }</span>\r\n                </div>\r\n                <div className=\"flex center\">\r\n                    { data.types.map(type => \r\n                        <span key={ type.type.name } className=\"poke-type-tag\" style={{\r\n                            background: types[type.type.name].bg,\r\n                            color: types[type.type.name].font,\r\n                        }}>{ types[type.type.name].trad }</span>   \r\n                    ) }\r\n                </div>\r\n                {/* <div className=\"flex between down\">\r\n                    <div>\r\n                        <span><strong>Habilidades</strong>:</span>\r\n                    </div>\r\n                    <div>\r\n                        { data.abilities.map(({ ability }) => \r\n                            <span key={ ability.name } className=\"poke-ability\" data-ability={ ability.name }>{ abilitiesTranslation[ability.name] ? abilitiesTranslation[ability.name] : ability.name }</span>\r\n                        )}\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"flex center down\">\r\n                    <button type=\"button\" className=\"btn btn-download\" onClick={ _ => getThisPokemonDetails(data.name) }>Ver Detalles</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function PokemonDetail({ name }) {\r\n    \r\n    const [ pokeInfo, setPokeInfo ] = useState({});\r\n    const [ isLoading, setLoading ] = useState(true);\r\n    const [ pokeEvolutions, setPokeEvolutions ] = useState([]);\r\n\r\n    useEffect(_ => {\r\n        getPokemonDetails(name).then(details => {\r\n            setPokeInfo(details)\r\n            setLoading(false);\r\n        });\r\n    },[ name ]);\r\n    \r\n    return (\r\n        <div className=\"flex center\">\r\n            {\r\n                isLoading\r\n                ? <PokeBallSpinner/>\r\n                : <PokemonData data={ pokeInfo }/>\r\n            }\r\n        </div>\r\n    );\r\n}","export default {\r\n    'pressure': 'presión',\r\n    'inner-focus': 'foco interno',\r\n    'drizzle': 'llovizna',\r\n    'swarm': 'enjambre',\r\n    'weak-armor': 'armadura fragil',    \r\n    'aftermath': 'resquicio',    \r\n    'keen-eye': 'vista lince',    \r\n    'big-pecks': 'sacapecho',    \r\n    'hydration': 'hidratación',    \r\n    'stench': 'hedor',    \r\n    'stench': 'hedor',    \r\n}","import React from 'react';\r\nimport './searchViewport.css';\r\n\r\nexport default function ScrollView({ children }){\r\n    return (\r\n        <div className=\"pokeViewport\">\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport PokemonDetail from '../components/PokeDetails/PokemonDetail';\r\nimport ScrollView from '../components/ScrollView/ScrollView';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function PokeDetailPage(){\r\n\r\n    const { name } = useParams();\r\n\r\n    return (\r\n        <>\r\n            <ScrollView>\r\n                <PokemonDetail name={ name }/>\r\n            </ScrollView>\r\n        </>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PokeSpinner from '../components/PokeSpinner/PokeBallSpinner';\r\nimport { getFilteredPokemonsByName } from '../services/PokeAPI.service';\r\nimport PokemonDetail from '../components/PokeDetails/PokemonDetail';\r\n\r\n\r\nconst PokemonSearchList = ({ list }) => {\r\n    return (\r\n        <div className=\"pokemon-search-list flex center flxwrap\">\r\n            {   \r\n            list.map(({ name }) => (\r\n                <PokemonDetail key={ name } name={ name }/>\r\n            ))\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function PokemonSearchPage(){\r\n\r\n    const [ isLoading, setLoading ] = useState(true);\r\n    const [ pokeSearchList, setPokeSearchList ] = useState([]);\r\n    const { name } = useParams();\r\n\r\n    useEffect(() => {\r\n        getFilteredPokemonsByName(name).then(pokemons => {\r\n            setPokeSearchList(pokemons);\r\n            setLoading(false);\r\n        });\r\n    } , []);\r\n\r\n    return (\r\n        <div className=\"flex center pokeViewport\">\r\n            {\r\n                isLoading\r\n                    ? <PokeSpinner/>\r\n                    : <PokemonSearchList list={ pokeSearchList }/>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport PokeHeader from './components/PokeHeader/PokeHeader';\r\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\r\nimport { getAllPokemons } from './services/PokeAPI.service';\r\n\r\nimport HomePage from './pages/Home';\r\nimport PokemonDetailPage from './pages/PokemonDetailPage';\r\nimport PokemonSearchPage from './pages/PokemonSearchPage';\r\nimport './App.css';\r\n\r\nfunction App() {  \r\n\r\n  return (\r\n    <Router>\r\n      <PokeHeader></PokeHeader>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <HomePage/>\r\n        </Route>\r\n        <Route path=\"/pokemon/:name\" exact>\r\n          <PokemonDetailPage/>\r\n        </Route>\r\n        <Route path=\"/pokemon/search/:name\" exact>\r\n          <PokemonSearchPage/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}